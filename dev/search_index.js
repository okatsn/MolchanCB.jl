var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MolchanCB","category":"page"},{"location":"#MolchanCB","page":"Home","title":"MolchanCB","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MolchanCB contains the tools for calculating the confidence boundary on the Molchan plane [1].","category":"page"},{"location":"#Confidence-boundary-on-the-Molchan-plane","page":"Home","title":"Confidence boundary on the Molchan plane","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Here is an example of using molchancb to reproduce Zechar and Jordan [1], Fig. 3 (a):","category":"page"},{"location":"","page":"Home","title":"Home","text":"\nusing CairoMakie, AlgebraOfGraphics\nusing MolchanCB\nusing DataFrames\nusing CategoricalArrays\n\ncreatedata(;\n    missing_rate=Float64[],\n    alarm_rate=Float64[],\n    event_number=Int64[],\n    alpha=Float64[]\n) = DataFrame(\n    :ν => missing_rate,\n    :τ => alarm_rate,\n    :N => event_number,\n    :α => alpha,\n)\n\ndf = createdata()\n\nN = 15\nfor alpha = [0.01, 0.05, 0.25, 0.50]\n    (al, ms) = molchancb(N, alpha)\n    append!(df, createdata(;\n        missing_rate=ms,\n        alarm_rate=al,\n        event_number=N,\n        alpha=alpha\n    ))\nend\n\n\ntransform!(df, :α => CategoricalArray; renamecols=false)\n\ndata(df) * visual(Lines) * mapping(:τ, :ν) * mapping(color=:α) |> \n        plt -> draw(plt; axis=(; aspect=AxisAspect(1)))\n","category":"page"},{"location":"","page":"Home","title":"Home","text":", and Zechar and Jordan [1], Fig. 3 (b):","category":"page"},{"location":"","page":"Home","title":"Home","text":"\ndf = createdata()\n\nalpha = 0.05\nfor N = [5, 15, 50, 100]\n    (al, ms) = molchancb(big(N), alpha)\n    append!(df, createdata(;\n        missing_rate=ms,\n        alarm_rate=al,\n        event_number=N,\n        alpha=alpha\n    ))\nend\n\ntransform!(df, :N => CategoricalArray; renamecols=false)\n\n\ndata(df) * visual(Lines) * mapping(:τ, :ν) * mapping(color=:N) |>\nplt -> draw(plt; axis=(; aspect=AxisAspect(1)))\n\n","category":"page"},{"location":"#Binomial-Distribution","page":"Home","title":"Binomial Distribution","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using CairoMakie, AlgebraOfGraphics\nusing MolchanCB\nusing DataFrames\nusing CategoricalArrays\n\ndf = DataFrame(\n    :x => Float64[],\n    :y => Float64[],\n    :N => Int64[],\n    :h => Int64[],\n)\n\nx = 0:0.001:1\nhlist = [2, 4]\n\nfor N = 5:10\n    for h in hlist \n        y = MolchanCB.bidistribution.(x, N, h)\n        append!(df, DataFrame(\n            :x => x, :y => y, :N => N, :h => h\n        ))\n    end\nend\n\ntransform!(df, :N => CategoricalArray; renamecols=false)\ntransform!(df, :h => CategoricalArray; renamecols=false)\n\ndata(df) * visual(Lines) * mapping(:x, :y) * mapping(color=:N) * mapping(row=:h) |>\nplt -> draw(plt; axis = (; title=\"Binomial distribution for h in $hlist\"))\n","category":"page"},{"location":"#Reference","page":"Home","title":"Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"J. D. Zechar and T. H. Jordan. Testing Alarm-Based Earthquake Predictions. Geophysical Journal International 172, 715–724 (2008). Accessed on Oct 7, 2019.\n\n\n\n","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MolchanCB]","category":"page"},{"location":"#MolchanCB.bidistribution-Tuple{Any, Any, Any}","page":"Home","title":"MolchanCB.bidistribution","text":"bidistribution(p, N, h), returns the probability of h hits in alarmed region A⊆R out of total N events, assuming a binomial distribution for whether hit the region of A or out of A.\n\nB(hN p) = fracNh (N - h) (p^h) ((1 - p)^N - h)\n\nR is the region we wish to predict the target event.\np is in [0, 1].\n\nPlease refer to Zechar and Jordan [1], Eq. 2.\n\n\n\n\n\n","category":"method"},{"location":"#MolchanCB.molchancb-Tuple{Any, Any}","page":"Home","title":"MolchanCB.molchancb","text":"molchancb(N, alpha; resolution=0.001) returns a vector of alarm rate and a vector of missing rate; they constitute the confidence boundary of 1-alpha × 100%.\n\nUse N = big(N) when encountering OverflowError.\n\n\n\n\n\n","category":"method"},{"location":"#MolchanCB.probhmore-Tuple{Any, Any, Any}","page":"Home","title":"MolchanCB.probhmore","text":"Probability of hitted h or more.\n\nsum_n=h^NB(nNP_A).\n\nh is the number of event that hit the alarmed area; please refer to Zechar and Jordan [1], Eq. 3.\n\n\n\n\n\n","category":"method"}]
}
